<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>

  <!-- 1.spring初始化 :通过listener标签完成;通过context-param标签指定配置文件-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <!-- post请求的中文乱码的解决 -->
  <!-- 字符编码过滤器 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!-- 通过初始化参数给属性赋值 -->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <!-- 设置响应的字符编码集为encoding对应编码集 -->
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--shiro的过滤器配置-->
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetBeanName</param-name>
      <!--这个标签的值一定要与spring-shiro配置文件中bean标签的 id名字 -->
      <param-value>shiroFilter</param-value>
    </init-param>
    <!-- filter的生命周期  将目标filter的生命周期交于tomcat管理 -->
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <!--过滤所有请求 -->
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- 配置监听器 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 通过servlet标签配置springmvc的分发器 -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <!-- <servlet-class>DispatcherServlet全限定名</servlet-class> -->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 默认加载WEB-INF下的名字为<servlet-name>标签中间的值-servlet.xml -->
    <!-- 可以通过初始化参数指定配置文件的位置以及名字 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc-servlet.xml</param-value>
    </init-param>
    <!-- 标签的值配置>=0的整数,tomcat启动的时候,就会实例化初始这个servlet -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!-- 所有以.do结尾的请求,都交给springmvc处理 -->
    <url-pattern>*.do</url-pattern>
    <!--
    url-pattern有四种写法
        1./login==>精确匹配
        2./*==>模糊匹配
        3./ws/*===>目录匹配
        4. *.do===>扩展名匹配
    -->
  </servlet-mapping>

</web-app>
